{
  "name": "prince",
  "homepage": "http://github.com/rse/node-prince",
  "description": "Node API for executing PrinceXML via prince(1) CLI",
  "version": "0.9.4",
  "license": "MIT",
  "author": {
    "name": "Ralf S. Engelschall",
    "email": "rse@engelschall.com",
    "url": "http://engelschall.com"
  },
  "keywords": [
    "Prince",
    "PrinceXML",
    "CLI",
    "XML",
    "HTML",
    "PDF",
    "API"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rse/node-prince.git"
  },
  "bugs": {
    "url": "http://github.com/rse/node-prince"
  },
  "main": "./prince-api.js",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-eslint": "~0.2.0",
    "grunt-mocha-test": "~0.9.0"
  },
  "dependencies": {
    "promise": "~4.0.0",
    "lodash": "~2.4.1",
    "progress": "~1.1.5",
    "request": "~2.34.0",
    "which": "~1.0.5",
    "chalk": "~0.4.0",
    "tar": "~0.1.19",
    "rimraf": "~2.2.6"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "install": "node ./prince-npm.js install",
    "uninstall": "node ./prince-npm.js uninstall"
  },
  "readme": "\nNode-Prince\n===========\n\n[Node](http://nodejs.org/) API for executing [PrinceXML](http://www.princexml.com/) via `prince` CLI.\n\n<p/>\n<img src=\"https://nodei.co/npm/node-prince.png?downloads=true&stars=true\" alt=\"\"/>\n\n<p/>\n<img src=\"https://david-dm.org/rse/node-prince.png\" alt=\"\"/>\n\nAbstract\n--------\n\nThis is a [Node](http://nodejs.org/) API for executing the\n[PrinceXML](http://www.princexml.com/) CLI `prince` from within\nJavaScript. The essential point of this Node extension is not primarily\nto just abstract away the asynchronous CLI execution. Instead there\nare two other major points: First, this Node extension provides a\nfixed dependency, as other Node extensions which require PrinceXML can\njust depend (via their NPM `package.json` file) onto this extension.\nSecond, as this Node extension can &mdash; across platforms &mdash;\nautomatically download, locally unpack and use a PrinceXML distribution,\nthere is no need for any previously available global PrinceXML\ninstallation. Just depend on this Node extension and PrinceXML is\navailable!\n\nInstallation\n------------\n\nUse the Node Package Manager (NPM) to install this module\nlocally (default) or globally (with option `-g`):\n\n    $ npm install [-g] prince\n\nAPI\n---\n\n- `Prince([options]): Prince`: constructor for the API. Call this once\n  for every XML/HTML to PDF conversion process.\n  This returns the Prince API for further method chaining.\n\n- `Prince#binary(binary): Prince`: set the path to the prince(1) binary.\n  By default it is `prince` (in case PrinceXML was found globally\n  installed at the Node API installation time) or the path to the\n  `prince` binary of the locally installed PrinceXML distribution (in\n  case PrinceXML was not found globally installed at the Node API\n  installation time).\n  This returns the Prince API for further method chaining.\n\n- `Prince#prefix(prefix): Prince`: set the path to the PrinceXML\n  installation. This by default is either empty\n  (in case PrinceXML was found globally\n  installed at the Node API installation time) or the path to the\n  locally installed PrinceXML distribution (in case PrinceXML was not\n  found globally installed at the Node API installation time).\n  This returns the Prince API for further method chaining.\n\n- `Prince#license(filename): Prince`: set the path to the PrinceXML\n  license file. This by default uses the path `license/license.dat`\n  under the PrinceXML installation.\n  This returns the Prince API for further method chaining.\n\n- `Prince#timeout(timeout): Prince`: set the execution timeout in milliseconds.\n  The by default it is `10000` (10s).\n  This returns the Prince API for further method chaining.\n\n- `Prince#cwd(dirname): Prince`: set the current working directory for execution.\n  The by default it is `.` (current working directory).\n  This returns the Prince API for further method chaining.\n\n- `Prince#inputs(filename): Prince`: set one (in case `filename` is a string)\n   or multiple (in case `filename` is an array of strings) input XML/HTML files.\n  This returns the Prince API for further method chaining.\n\n- `Prince#output(filename): Prince`: set the output PDF file.\n  This returns the Prince API for further method chaining.\n\n- `Prince#option(name, value[, forced]): Prince`: set a PrinceXML option\n  name `name` to a value `value`. The API knows the officially supported\n  options of PrinceXML 9.0 and by default rejects unknown options.\n  But arbitrary options can be passed by setting `forced` to `true`\n  in case a different PrinceXML version should be used. This returns\n  the Prince API for further method chaining.\n\n- `Prince#execute(): Promise`: asynchronously execute the conversion\n  process. This returns a promise.\n\nLicense\n-------\n\nCopyright (c) 2014 Ralf S. Engelschall (http://engelschall.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "_id": "prince@0.9.4",
  "dist": {
    "shasum": "859ab05ebd3302ad673e35dd461787d863651d45"
  },
  "_from": "prince"
}
